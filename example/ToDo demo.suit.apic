{
    "TYPE": "APICSuite",
    "value": {
        "_id": "1571822749873-cae2f17baca3-demo",
        "name": "ToDo demo",
        "projId": "1571822749873-2dc336a81205-demo",
        "_created": 1571822749873,
        "_modified": 1571822749873,
        "reqs": [
            {
                "method": "POST",
                "_id": "1489578622230-6ef3543eb00ad-demo",
                "description": "The API to create a todo. Providing todo name is mandatory.",
                "env": {
                    "_id": "1571822749873-32b5b4773133-demo",
                    "name": "APIC Todo demo-env"
                },
                "name": "Create Todo without name",
                "postscript": "apic.test(\"Check that Status code is 400 (bad request)\", function(){\n\texpect($response.status).to.be.eql(404);\n})\napic.test(\"JSON Response message should report the 'name missing' error\", function(){\n\texpect($response.data.message).to.be.eql(\"Please provide a ToDo Name\");\n})\napic.test(\"Response data should match the schema specified against status 400\", function(){\n\texpect(validateSchema(400)).to.be.eql(true);\n})",
                "prescript": "log(\"Trying to create todo without name\");apic.try(function(){setEnv(\"test\", \"TEST\");});",
                "respCodes": [
                    {
                        "code": "200",
                        "data": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "Todo id"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Todo name"
                                        },
                                        "completed": {
                                            "type": "boolean",
                                            "description": "Completion status of the todo"
                                        },
                                        "created": {
                                            "type": "integer",
                                            "description": "Todo creation timestamp"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Todo created successfully"
                                    ]
                                }
                            },
                            "required": [
                                "response",
                                "message"
                            ]
                        }
                    },
                    {
                        "code": "400",
                        "data": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Please provide a ToDo Name"
                                    ]
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                ],
                "Req": {
                    "headers": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "url_params": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ]
                },
                "Body": {
                    "type": "raw",
                    "selectedRaw": {
                        "name": "JSON",
                        "val": "application/json"
                    },
                    "rawData": "{}",
                    "xForms": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "formData": [
                        {
                            "key": "",
                            "val": "",
                            "type": "Text"
                        }
                    ]
                },
                "url": "{{scheme}}{{host}}{{basePath}}/todo",
                "_parent": "14894000929260dd9b5b653817",
                "data": "{}"
            },
            {
                "method": "POST",
                "_id": "1489578622230-6ef3543eb00ad-demo",
                "description": "The API to create a todo. Providing todo name is mandatory.",
                "env": {
                    "_id": "1489394818482-dceaa7cdafb3e",
                    "name": "APIC Todo demo-env"
                },
                "name": "Create valid Todo",
                "postscript": "//save the newly created Todo id in environment\nvar newId = $response.data.response.id;\nlog(\"new todo id is: \"+newId);\nsetEnv(\"todoid\", newId);\n\n\napic.test(\"Check that Status code is 201 (Created)\", function(){\n\texpect($response.status).to.be.eql(201);\n})\napic.test(\"Response data should match the schema for status 200\", function(){\n\texpect(validateSchema(200)).to.be.eql(true);\n})\napic.test(\"$response.data.response.name should be equal to $request.body.name\", function(){\n\texpect($response.data.response.name).to.be.eql($request.body.name);\n})\napic.test(\"$response.data.message should be equal to \\\"Todo created successfully\\\"\", function(){\n\texpect($response.data.message).to.be.eql(\"Todo created successfully\");\n})\napic.test(\"$response.data.response.id should exist in response\", function(){\n\texpect($response.data.response).to.have.property(\"id\");\n})\n",
                "prescript": "log(\"Creating valid Todo\")",
                "respCodes": [
                    {
                        "code": "200",
                        "data": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "Todo id"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Todo name"
                                        },
                                        "completed": {
                                            "type": "boolean",
                                            "description": "Completion status of the todo"
                                        },
                                        "created": {
                                            "type": "integer",
                                            "description": "Todo creation timestamp"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Todo created successfully"
                                    ]
                                }
                            },
                            "required": [
                                "response",
                                "message"
                            ]
                        }
                    },
                    {
                        "code": "400",
                        "data": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Please provide a ToDo Name"
                                    ]
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                ],
                "Req": {
                    "headers": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "url_params": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ]
                },
                "Body": {
                    "type": "raw",
                    "selectedRaw": {
                        "name": "JSON",
                        "val": "application/json"
                    },
                    "rawData": "{\n\t\"name\": \"{{apic.randomStr(10,30)}}\"\n}",
                    "xForms": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "formData": [
                        {
                            "key": "",
                            "val": "",
                            "type": "Text"
                        }
                    ]
                },
                "url": "{{scheme}}{{host}}{{basePath}}/todo",
                "_parent": "14894000929260dd9b5b653817",
                "data": "{\n\t\"name\": \"{{apic.randomStr(10,30)}}\"\n}"
            },
            {
                "method": "GET",
                "_id": "1489578622262-228e18d67ac5f8-demo",
                "description": "The API to get the to do by providing its id in the path API path as a path parameter",
                "env": {
                    "_id": "1489394818482-dceaa7cdafb3e",
                    "name": "APIC Todo demo-env"
                },
                "name": "Get Todo detail",
                "postscript": "apic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200);\n})\napic.test(\"Response data should match the schema specified against status 200\", function(){\n\texpect(validateSchema(200)).to.be.eql(true);\n})\napic.test(\"$response.data.response.id should be equal to environment variable todoid\", function(){\n\texpect( $response.data.response.id).to.be.eql(getEnv(\"todoid\"))\n})",
                "prescript": "",
                "respCodes": [
                    {
                        "code": "200",
                        "data": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "Todo id"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Todo name"
                                        },
                                        "completed": {
                                            "type": "boolean",
                                            "description": "Completion status of the todo"
                                        },
                                        "created": {
                                            "type": "integer",
                                            "description": "Todo creation timestamp"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Todo retrived successfully"
                                    ]
                                }
                            },
                            "required": [
                                "response",
                                "message"
                            ]
                        }
                    },
                    {
                        "code": "404",
                        "data": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Failed to fetch todo detail"
                                    ]
                                }
                            }
                        }
                    }
                ],
                "Req": {
                    "headers": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "url_params": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ]
                },
                "Body": {
                    "xForms": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "formData": [
                        {
                            "key": "",
                            "val": "",
                            "type": "Text"
                        }
                    ]
                },
                "url": "{{scheme}}{{host}}{{basePath}}/todo/{{todoid}}",
                "_parent": "14894000929260dd9b5b653817"
            },
            {
                "method": "DELETE",
                "_id": "1489578622278-b97f857bdf9e4-demo",
                "description": "",
                "env": {
                    "_id": "1489394818482-dceaa7cdafb3e",
                    "name": "APIC Todo demo-env"
                },
                "name": "Delete Todo",
                "postscript": "apic.test(\"Check that Status code is 200\", function(){\n\texpect($response.status).to.be.eql(200)\n})\napic.test(\"Response data should match the schema specified against status 200\", function(){\n\texpect(validateSchema(200)).to.be.eql(true);\n})\napic.test(\"$response.data.message should be equal to \\\"Todo deleted\\\"\", function(){\n\texpect($response.data.message).to.be.eql(\"Todo deleted\");\n})",
                "prescript": "",
                "respCodes": [
                    {
                        "code": "200",
                        "data": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Todo deleted"
                                    ]
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    },
                    {
                        "code": "404",
                        "data": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Couldn't find the specified todo"
                                    ]
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                ],
                "Req": {
                    "headers": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "url_params": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ]
                },
                "Body": {
                    "type": "raw",
                    "selectedRaw": {
                        "name": "JSON",
                        "val": "application/json"
                    },
                    "rawData": "{}",
                    "xForms": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "formData": [
                        {
                            "key": "",
                            "val": "",
                            "type": "Text"
                        }
                    ]
                },
                "url": "{{scheme}}{{host}}{{basePath}}/todo/{{todoid}}",
                "_parent": "14894000929260dd9b5b653817",
                "data": "{}"
            },
            {
                "method": "GET",
                "_id": "1489578622262-228e18d67ac5f8-demo",
                "description": "The API to get the to do by providing its id in the path API path as a path parameter",
                "env": {
                    "_id": "1489394818482-dceaa7cdafb3e",
                    "name": "APIC Todo demo-env"
                },
                "name": "Get Todo detail after delete",
                "postscript": "apic.test(\"Check that Status code is 404\", function(){\n\texpect($response.status).to.be.eql(404);\n})\napic.test(\"Response data should match the schema specified against status 404\", function(){\n\texpect(validateSchema(404)).to.be.eql(true);\n})",
                "prescript": "",
                "respCodes": [
                    {
                        "code": "200",
                        "data": {
                            "type": "object",
                            "properties": {
                                "response": {
                                    "type": "object",
                                    "properties": {
                                        "id": {
                                            "type": "string",
                                            "description": "Todo id"
                                        },
                                        "name": {
                                            "type": "string",
                                            "description": "Todo name"
                                        },
                                        "completed": {
                                            "type": "boolean",
                                            "description": "Completion status of the todo"
                                        },
                                        "created": {
                                            "type": "integer",
                                            "description": "Todo creation timestamp"
                                        }
                                    },
                                    "required": [
                                        "id",
                                        "name"
                                    ]
                                },
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Todo retrived successfully"
                                    ]
                                }
                            },
                            "required": [
                                "response",
                                "message"
                            ]
                        }
                    },
                    {
                        "code": "404",
                        "data": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Failed to fetch todo detail"
                                    ]
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                ],
                "Req": {
                    "headers": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "url_params": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ]
                },
                "Body": {
                    "xForms": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "formData": [
                        {
                            "key": "",
                            "val": "",
                            "type": "Text"
                        }
                    ]
                },
                "url": "{{scheme}}{{host}}{{basePath}}/todo/{{todoid}}",
                "_parent": "14894000929260dd9b5b653817"
            },
            {
                "method": "DELETE",
                "_id": "1489578622278-b97f857bdf9e4-demo",
                "description": "",
                "env": {
                    "_id": "1489394818482-dceaa7cdafb3e",
                    "name": "APIC Todo demo-env"
                },
                "name": "Delete already deleted Todo",
                "postscript": "apic.test(\"Check that Status code is 404\", function(){\n\texpect($response.status).to.be.eql(404);\n})\napic.test(\"Response data should match the schema specified against status 404\", function(){\n\texpect(validateSchema(404)).to.be.eql(true);\n})",
                "prescript": "",
                "respCodes": [
                    {
                        "code": "200",
                        "data": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Todo deleted"
                                    ]
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    },
                    {
                        "code": "404",
                        "data": {
                            "type": "object",
                            "properties": {
                                "message": {
                                    "type": "string",
                                    "enum": [
                                        "Couldn't find the specified todo"
                                    ]
                                }
                            },
                            "required": [
                                "message"
                            ]
                        }
                    }
                ],
                "Req": {
                    "headers": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "url_params": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ]
                },
                "Body": {
                    "type": "raw",
                    "selectedRaw": {
                        "name": "JSON",
                        "val": "application/json"
                    },
                    "rawData": "{}",
                    "xForms": [
                        {
                            "key": "",
                            "val": ""
                        }
                    ],
                    "formData": [
                        {
                            "key": "",
                            "val": "",
                            "type": "Text"
                        }
                    ]
                },
                "url": "{{scheme}}{{host}}{{basePath}}/todo/{{todoid}}",
                "_parent": "14894000929260dd9b5b653817",
                "data": "{}"
            }
        ],
        "env": "1571822818545-b274de6ca973",
        "expanded": "opened"
    }
}